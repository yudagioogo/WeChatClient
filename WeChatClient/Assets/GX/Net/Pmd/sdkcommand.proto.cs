//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: sdkcommand.proto

using System;
using System.Collections.Generic;
using System.Diagnostics;

namespace Pmd
{
	/// <summary>
	/// TODO
	/// </summary>
	public partial class Sdk
	{
		public enum Param
		{
			StartUpGameRequestSdkPmd_C = 1,
			StartUpGameReturnSdkPmd_S = 2,
			SupportGamePlatListSdkPmd_S = 3,
			UserLoginPlatRequestSdkPmd_C = 4,
			UserLoginPlatReturnSdkPmd_S = 5,
			CreatePlatOrderRequestSdkPmd_C = 6,
			CreatePlatOrderReturnSdkPmd_S = 7,
			NotifyRechargeRequestSdkPmd_S = 8,
			NotifyRechargeReturnSdkPmd_C = 9,
			RechargeQueryRequestIOSSdkPmd_C = 10,
			RequestQueryPlatPointSdkPmd_C = 11,
			ReturnQueryPlatPointSdkPmd_S = 12,
			RequestRedeemPlatPointSdkPmd_C = 13,
			ReturnRedeemPlatPointSdkPmd_S = 14,
			ReturnErrorCodeSdkPmd_S = 15,
			RequestBindAccountSdkPmd_CS = 16,
			RequestBindPlatInfoSdkPmd_CS = 17,
			RequestAccidByPlatinfoSdkPmd_CS = 18
		}
	}
	/// <summary>
	/// 区服务器请求连接登陆服务器的第一个消息
	/// </summary>
	public partial class StartUpGameRequestSdkPmd_C
	{
		public string key { get; set; }
		public uint version { get; set; }
		/// <summary>
		/// 压缩算法
		/// </summary>
		public string compress { get; set; }
		/// <summary>
		/// 加密算法
		/// </summary>
		public string encrypt { get; set; }
		/// <summary>
		/// 加密key
		/// </summary>
		public string encryptkey { get; set; }
	}
	/// <summary>
	/// 返回给区服务器的连接验证状态,这里也发送区信息的原因是考虑游戏服务器可能连接名字验证服务器比连接登陆服务器快
	/// </summary>
	public partial class StartUpGameReturnSdkPmd_S
	{
		/// <summary>
		/// 返回成功标志
		/// </summary>
		public bool ret { get; set; }
		/// <summary>
		/// 返回描述
		/// </summary>
		public string retdesc { get; set; }
	}
	/// <summary>
	/// 游戏类型信息,以后可能会扩充
	/// </summary>
	public partial class GameZoneInfo
	{
		/// <summary>
		/// 游戏类型编号
		/// </summary>
		public uint gameid { get; set; }
		/// <summary>
		/// 游戏区id
		/// </summary>
		public uint zoneid { get; set; }
		/// <summary>
		/// 游戏名称
		/// </summary>
		public string gamename { get; set; }
		/// <summary>
		/// 游戏区名称
		/// </summary>
		public string zonename { get; set; }
	}
	/// <summary>
	/// 平台信息
	/// </summary>
	public partial class SdkPlatInfo
	{
		/// <summary>
		/// 平台类型编号
		/// </summary>
		public uint platid { get; set; }
		/// <summary>
		/// 平台名称
		/// </summary>
		public string platname { get; set; }
	}
	/// <summary>
	/// 平台编号列表
	/// </summary>
	public partial class GamePlatList
	{
		private Pmd.GameZoneInfo m_gamezone;
		/// <summary>
		/// 游戏类型
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.GameZoneInfo gamezone
		{
			get { if (this.m_gamezone == null) m_gamezone = new Pmd.GameZoneInfo(); return m_gamezone; }
			set { m_gamezone = value; }
		}
		private List<Pmd.SdkPlatInfo> m_Platinfo;
		/// <summary>
		/// 平台编号列表
		/// </summary>
		[DebuggerNonUserCode]
		public List<Pmd.SdkPlatInfo> Platinfo
		{
			get { if (this.m_Platinfo == null) m_Platinfo = new List<Pmd.SdkPlatInfo>(); return m_Platinfo; }
			set { m_Platinfo = value; }
		}
	}
	/// <summary>
	/// 当前支持的平台个数
	/// </summary>
	public partial class SupportGamePlatListSdkPmd_S
	{
		private List<Pmd.GamePlatList> m_list;
		/// <summary>
		/// 平台编号列表
		/// </summary>
		[DebuggerNonUserCode]
		public List<Pmd.GamePlatList> list
		{
			get { if (this.m_list == null) m_list = new List<Pmd.GamePlatList>(); return m_list; }
			set { m_list = value; }
		}
	}
	/// <summary>
	/// 玩家登陆平台的基础信息
	/// </summary>
	public partial class PlatBaseData
	{
		private Pmd.GameZoneInfo m_gamezone;
		/// <summary>
		/// 游戏类型
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.GameZoneInfo gamezone
		{
			get { if (this.m_gamezone == null) m_gamezone = new Pmd.GameZoneInfo(); return m_gamezone; }
			set { m_gamezone = value; }
		}
		/// <summary>
		/// 这个需要在后面的返回中原样返回，用于游戏平台查找对应的客户端连接,登陆验证时充当logintempid
		/// </summary>
		public ulong myaccid { get; set; }
		/// <summary>
		/// 平台编号
		/// </summary>
		public uint platid { get; set; }
		/// <summary>
		/// 账号信息,如果是ID，也需要转换成字符串，如果是id和account都有，就需要&quot;id|account&quot;链接
		/// </summary>
		public string plataccount { get; set; }
		/// <summary>
		/// sdk服务器临时编号
		/// </summary>
		public ulong sdkserverid { get; set; }
		/// <summary>
		/// 玩家SESSION，部分平台有这个,如果是离线验证传签名
		/// </summary>
		public string session { get; set; }
		/// <summary>
		/// 扩展数据长度
		/// </summary>
		public string extdata { get; set; }
		/// <summary>
		/// 扩展数据长度
		/// </summary>
		public string extdata1 { get; set; }
		/// <summary>
		/// 此账号是游客账号转正式账号时的游客账号，只有第一转的时候有用
		/// </summary>
		public string oldplataccount { get; set; }
		/// <summary>
		/// 平台昵称
		/// </summary>
		public string nickname { get; set; }
		/// <summary>
		/// 平台头像
		/// </summary>
		public string faceurl { get; set; }
	}
	/// <summary>
	/// 玩家请求登陆给sdk服务器
	/// </summary>
	public partial class UserLoginPlatRequestSdkPmd_C
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 标志出PlatBaseData里面session的格式,默认0是json,1表示字符串
		/// </summary>
		public uint sessiontype { get; set; }
	}
	/// <summary>
	/// 玩家请求登陆从sdk服务器返回
	/// </summary>
	public partial class UserLoginPlatReturnSdkPmd_S
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 返回状态,0表示成功,其他参考HttpReturnCode
		/// </summary>
		public uint ret { get; set; }
		/// <summary>
		/// 错误描述
		/// </summary>
		public string retdesc { get; set; }
	}
	/// <summary>
	/// 创建订单号，有些需要于第三方沟通，有的不需要
	/// </summary>
	public partial class CreatePlatOrderRequestSdkPmd_C
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 游戏订单号
		/// </summary>
		public string gameorder { get; set; }
		/// <summary>
		/// 用户在游戏内部游戏服上的角色ID
		/// </summary>
		public ulong roleid { get; set; }
		/// <summary>
		/// 用户在游戏内部游戏服上的角色名称
		/// </summary>
		public string rolename { get; set; }
		/// <summary>
		/// 原价(格式:0.00),购买时应用传入的单价*总数,总原价
		/// </summary>
		public float originalmoney { get; set; }
		/// <summary>
		/// 实际价格(格式:0.00),购买时应用传入的单价*总数,总实际 价格
		/// </summary>
		public float ordermoney { get; set; }
		/// <summary>
		/// 用户买了什么商品
		/// </summary>
		public uint goodid { get; set; }
		/// <summary>
		/// 用户买了多少个
		/// </summary>
		public uint goodnum { get; set; }
		/// <summary>
		/// 商品名称
		/// </summary>
		public string goodname { get; set; }
		/// <summary>
		/// 商品描述
		/// </summary>
		public string gooddesc { get; set; }
		/// <summary>
		/// 客户端跳转url
		/// </summary>
		public string redirecturl { get; set; }
		/// <summary>
		/// 支付平台id
		/// </summary>
		public uint payplatid { get; set; }
		/// <summary>
		/// 做了兼容，方便以后别的平台有特殊需求
		/// </summary>
		public string extdata { get; set; }
	}
	/// <summary>
	/// 创建订单号，有些需要于第三方沟通，有的不需要
	/// </summary>
	public partial class CreatePlatOrderReturnSdkPmd_S
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 游戏订单号
		/// </summary>
		public string gameorder { get; set; }
		/// <summary>
		/// 用户在游戏内部游戏服上的角色ID
		/// </summary>
		public ulong roleid { get; set; }
		/// <summary>
		/// 原价(格式:0.00),购买时应用传入的单价*总数,总原价
		/// </summary>
		public float originalmoney { get; set; }
		/// <summary>
		/// 实际价格(格式:0.00),购买时应用传入的单价*总数,总实际 价格
		/// </summary>
		public float ordermoney { get; set; }
		/// <summary>
		/// 用户买了什么商品
		/// </summary>
		public uint goodid { get; set; }
		/// <summary>
		/// 用户买了多少个
		/// </summary>
		public uint goodnum { get; set; }
		/// <summary>
		/// 返回值,0表示成功,1表示失败
		/// </summary>
		public uint result { get; set; }
		/// <summary>
		/// 回调通知url
		/// </summary>
		public string noticeurl { get; set; }
		/// <summary>
		/// 渠道订单号
		/// </summary>
		public string platorder { get; set; }
		/// <summary>
		/// 客户端传给第三方支付时所需签名
		/// </summary>
		public string sign { get; set; }
		/// <summary>
		/// 客户端跳转url
		/// </summary>
		public string redirecturl { get; set; }
		/// <summary>
		/// 支付平台id
		/// </summary>
		public uint payplatid { get; set; }
		/// <summary>
		/// 做了兼容，方便以后别的平台有特殊需求
		/// </summary>
		public string extdata { get; set; }
	}
	/// <summary>
	///  代理通知游戏服有玩家充值
	///  对于协议里面的部分字段，比如玩家ID，商品ID等字段需要看平台充值协议，可能平台只能提供一个订单ID参数。
	///  这时候就在平台上实现内部订单号生成，通过订单号来查找这些信息。
	///  平台回调sdk后通知游戏,AS2PSRechargeCommand
	/// </summary>
	public partial class NotifyRechargeRequestSdkPmd_S
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 平台订单号
		/// </summary>
		public string platorder { get; set; }
		/// <summary>
		/// 游戏订单号
		/// </summary>
		public string gameorder { get; set; }
		/// <summary>
		/// 用户在游戏内部游戏服上的角色ID
		/// </summary>
		public ulong roleid { get; set; }
		/// <summary>
		/// 原价(格式:0.00),购买时应用传入的单价*总数,总原价
		/// </summary>
		public float originalmoney { get; set; }
		/// <summary>
		/// 实际价格(格式:0.00),购买时应用传入的单价*总数,总实际 价格
		/// </summary>
		public float ordermoney { get; set; }
		/// <summary>
		/// 用户买了什么商品
		/// </summary>
		public uint goodid { get; set; }
		/// <summary>
		/// 用户买了多少个
		/// </summary>
		public uint goodnum { get; set; }
		/// <summary>
		/// 购买状态, 1, 处理中;2 支付成功;3支付失败
		/// </summary>
		public uint result { get; set; }
		/// <summary>
		/// 扩展数据长度
		/// </summary>
		public string extdata { get; set; }
	}
	/// <summary>
	/// 平台回调sdk后通知游戏平台,PS2ASRechargeCommand
	/// </summary>
	public partial class NotifyRechargeReturnSdkPmd_C
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 平台订单号
		/// </summary>
		public string platorder { get; set; }
		/// <summary>
		/// 游戏订单号
		/// </summary>
		public string gameorder { get; set; }
		/// <summary>
		/// 用户在游戏内部游戏服上的角色ID
		/// </summary>
		public ulong roleid { get; set; }
		/// <summary>
		/// 购买状态, 0, 支付成功, 1, 处理中;2 支付成功(兼容老版本);3支付失败
		/// </summary>
		public uint result { get; set; }
		/// <summary>
		/// 扩展数据长度
		/// </summary>
		public string extdata { get; set; }
	}
	/// <summary>
	/// ISO用，玩家请求充值后通知sdk服务器去苹果服务器查询,PS2ASRechargeQueryCommand
	/// </summary>
	public partial class RechargeQueryRequestIOSSdkPmd_C
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 游戏订单号
		/// </summary>
		public string gameorder { get; set; }
		/// <summary>
		/// 用户在游戏内部游戏服上的角色ID
		/// </summary>
		public ulong roleid { get; set; }
		/// <summary>
		/// 原价(格式:0.00),购买时应用传入的单价*总数,总原价
		/// </summary>
		public float originalmoney { get; set; }
		/// <summary>
		/// 实际价格(格式:0.00),购买时应用传入的单价*总数,总实际 价格
		/// </summary>
		public float ordermoney { get; set; }
		/// <summary>
		/// 查询凭证
		/// </summary>
		public string token { get; set; }
		/// <summary>
		/// 扩展数据长度
		/// </summary>
		public string extdata { get; set; }
	}
	/// <summary>
	/// 请求平台帐号中剩余点数
	/// </summary>
	public partial class RequestQueryPlatPointSdkPmd_C
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 游戏订单号
		/// </summary>
		public string gameorder { get; set; }
	}
	/// <summary>
	/// 请求平台帐号中剩余点数返回
	/// </summary>
	public partial class ReturnQueryPlatPointSdkPmd_S
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 游戏订单号
		/// </summary>
		public string gameorder { get; set; }
		/// <summary>
		/// 剩余点数
		/// </summary>
		public ulong balance { get; set; }
		/// <summary>
		/// 登陆结果, 0 表示成功
		/// </summary>
		public uint ret { get; set; }
		/// <summary>
		/// 返回描述
		/// </summary>
		public string retdesc { get; set; }
	}
	/// <summary>
	/// 请求平台帐号中剩余点数
	/// </summary>
	public partial class RequestRedeemPlatPointSdkPmd_C
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 游戏订单号
		/// </summary>
		public string gameorder { get; set; }
		/// <summary>
		/// 请求兑换的点数
		/// </summary>
		public ulong point { get; set; }
	}
	/// <summary>
	/// 请求平台帐号中剩余点数返回
	/// </summary>
	public partial class ReturnRedeemPlatPointSdkPmd_S
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 游戏订单号
		/// </summary>
		public string gameorder { get; set; }
		/// <summary>
		/// 请求兑换的点数
		/// </summary>
		public ulong point { get; set; }
		/// <summary>
		/// 剩余点数
		/// </summary>
		public ulong balance { get; set; }
		/// <summary>
		/// 登陆结果, 0 表示成功
		/// </summary>
		public uint ret { get; set; }
		/// <summary>
		/// 返回描述
		/// </summary>
		public string retdesc { get; set; }
	}
	/// <summary>
	/// 公共的错误返回，方便调试
	/// </summary>
	public partial class ReturnErrorCodeSdkPmd_S
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 登陆结果, 0 表示成功
		/// </summary>
		public uint ret { get; set; }
		/// <summary>
		/// 返回描述
		/// </summary>
		public string retdesc { get; set; }
	}
	/// <summary>
	/// 请求绑定账号
	/// </summary>
	public partial class RequestBindAccountSdkPmd_CS
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		/// <summary>
		/// 登陆结果, 0 表示成功,1表示已经绑定过，2表示账号已经注册过
		/// </summary>
		public uint ret { get; set; }
	}
	/// <summary>
	/// 平台基础信息
	/// </summary>
	public partial class PlatAccountInfo
	{
		/// <summary>
		/// 平台编号
		/// </summary>
		public uint platid { get; set; }
		/// <summary>
		/// 账号信息,如果是ID，也需要转换成字符串，如果是id和account都有，就需要&quot;id|account&quot;链接
		/// </summary>
		public string plataccount { get; set; }
		/// <summary>
		/// 平台名称
		/// </summary>
		public string platname { get; set; }
	}
	/// <summary>
	/// 账号绑定信息查询
	/// </summary>
	public partial class RequestBindPlatInfoSdkPmd_CS
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		private List<Pmd.PlatAccountInfo> m_bindplat;
		/// <summary>
		/// 已绑定平台信息
		/// </summary>
		[DebuggerNonUserCode]
		public List<Pmd.PlatAccountInfo> bindplat
		{
			get { if (this.m_bindplat == null) m_bindplat = new List<Pmd.PlatAccountInfo>(); return m_bindplat; }
			set { m_bindplat = value; }
		}
		/// <summary>
		/// 0 表示查询成功,1表示数据查询失败
		/// </summary>
		public uint ret { get; set; }
	}
	/// <summary>
	/// 能过平台id与plataccount查对应玩家uid
	/// </summary>
	public partial class RequestAccidByPlatinfoSdkPmd_CS
	{
		private Pmd.PlatBaseData m_data;
		/// <summary>
		/// 玩家登陆平台的基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatBaseData data
		{
			get { if (this.m_data == null) m_data = new Pmd.PlatBaseData(); return m_data; }
			set { m_data = value; }
		}
		private List<Pmd.PlatBaseData> m_reqdata;
		/// <summary>
		/// 请求平台玩家对应基础信息
		/// </summary>
		[DebuggerNonUserCode]
		public List<Pmd.PlatBaseData> reqdata
		{
			get { if (this.m_reqdata == null) m_reqdata = new List<Pmd.PlatBaseData>(); return m_reqdata; }
			set { m_reqdata = value; }
		}
		/// <summary>
		/// 0 表示查询成功,1表示数据查询失败
		/// </summary>
		public uint ret { get; set; }
	}
}
