//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: logincommand.proto

using System;
using System.Collections.Generic;
using System.Diagnostics;

namespace Pmd
{
	public enum VerifyReturnReason
	{
		/// <summary>
		/// 登陆成功
		/// </summary>
		LoginOk = 0,
		/// <summary>
		/// 服务器没有token
		/// </summary>
		TokenFindError = 1,
		/// <summary>
		/// token错误
		/// </summary>
		TokenDiffError = 2,
		/// <summary>
		/// 版本验证
		/// </summary>
		VersionError = 3
	}
	/// <summary>
	/// 区服务器状态
	/// </summary>
	public enum ZoneState
	{
		/// <summary>
		/// 关闭状态
		/// </summary>
		Shutdown = 0,
		/// <summary>
		/// 正常运行
		/// </summary>
		Normal = 1,
		/// <summary>
		/// 爆满
		/// </summary>
		Fullly = 2
	}
	public enum LoginReturnFailReason
	{
		/// <summary>
		/// 密码错误
		/// </summary>
		Password = 1,
		/// <summary>
		/// 区服务器已关闭
		/// </summary>
		ServerShutdown = 2,
		/// <summary>
		/// 客户端游戏版本号太低
		/// </summary>
		VersionTooLow = 3,
		/// <summary>
		/// 没有找到登陆token,需要重新平台验证
		/// </summary>
		UserTokenFind = 4,
		/// <summary>
		/// token错误
		/// </summary>
		UserTokenTempId = 5,
		/// <summary>
		/// token已过期
		/// </summary>
		UserTokenTimeOut = 6,
		/// <summary>
		/// 重复登陆
		/// </summary>
		LoginDulicate = 7,
		/// <summary>
		/// 没有可用网关
		/// </summary>
		NoGatewaytDown = 8
	}
	/// <summary>
	/// 平台枚举
	/// </summary>
	public enum PlatType
	{
		/// <summary>
		/// 本平台
		/// </summary>
		PlatType_Normal = 0,
		/// <summary>
		/// 手上活
		/// </summary>
		PlatType_LeZhuan = 67,
		/// <summary>
		/// 微信
		/// </summary>
		PlatType_WeChat = 68,
		/// <summary>
		/// play68
		/// </summary>
		PlatType_Play68 = 69,
		/// <summary>
		/// 爱贝云
		/// </summary>
		PlatType_AiBei = 70,
		/// <summary>
		/// 性之助
		/// </summary>
		PlatType_XingZhiZhu = 73,
		/// <summary>
		/// 火舞
		/// </summary>
		PlatType_HuoWu = 74,
		/// <summary>
		/// 彩果
		/// </summary>
		PlatType_CaiGuo = 77,
		/// <summary>
		/// 1758
		/// </summary>
		PlatType_1758 = 79
	}
	public partial class Login
	{
		public enum Param
		{
			AccountTokenVerifyLoginUserPmd_CS = 1,
			AccountTokenVerifyReturnLoginUserPmd_S = 2,
			ZoneInfoListLoginUserPmd_S = 3,
			UserLoginRequestLoginUserPmd_C = 4,
			UserLoginReturnFailLoginUserPmd_S = 5,
			UserLoginReturnOkLoginUserPmd_S = 6,
			UserLoginTokenLoginUserPmd_C = 7,
			ClientLogUrlLoginUserPmd_S = 8,
			MessageBoxLoginUserPmd_S = 9,
			RequestAccountRegisterLoginUserPmd_C = 10,
			ReturnAccountRegisterLoginUserPmd_S = 11,
			UserLogoutTokenLoginUserPmd_C = 12,
			UserLoginReconnectLoginUserPmd_C = 13,
			ReconnectKickoutLoginUserPmd_S = 14
		}
	}
	/// <summary>
	/// 客户端发给登陆服务器的登陆验证消息
	/// </summary>
	public partial class AccountTokenVerifyLoginUserPmd_CS
	{
		/// <summary>
		/// 平台账号
		/// </summary>
		public string account { get; set; }
		/// <summary>
		/// token 可以是第三方认证
		/// </summary>
		public string token { get; set; }
		/// <summary>
		/// 当前客户端login版本号Version_Login
		/// </summary>
		public uint version { get; set; }
		/// <summary>
		/// if filled, will send ZoneInfoListLoginUserPmd_S for select, else auto select zone
		/// </summary>
		public uint gameid { get; set; }
		/// <summary>
		/// 机器码
		/// </summary>
		public string mid { get; set; }
		/// <summary>
		/// 平台编号
		/// </summary>
		public uint platid { get; set; }
		/// <summary>
		/// if filled, will auto login UserLoginRequestLoginUserPmd_C, UserLoginTokenLoginSmd_SC
		/// </summary>
		public uint zoneid { get; set; }
		/// <summary>
		/// 当前客户端game版本号Version_Login
		/// </summary>
		public uint gameversion { get; set; }
		/// <summary>
		/// 压缩算法
		/// </summary>
		public string compress { get; set; }
		/// <summary>
		/// 加密算法
		/// </summary>
		public string encrypt { get; set; }
		/// <summary>
		/// 加密key
		/// </summary>
		public string encryptkey { get; set; }
	}
	/// <summary>
	/// 登陆服务器返回给客户端的认证结果
	/// </summary>
	public partial class AccountTokenVerifyReturnLoginUserPmd_S
	{
		/// <summary>
		/// 返回值
		/// </summary>
		public Pmd.VerifyReturnReason retcode { get; set; }
		/// <summary>
		/// 返回错误描述,正确时不填
		/// </summary>
		public string desc { get; set; }
	}
	/// <summary>
	/// 区服务器信息
	/// </summary>
	public partial class ZoneInfo
	{
		/// <summary>
		/// 区编号
		/// </summary>
		public uint zoneid { get; set; }
		/// <summary>
		/// 区名称
		/// </summary>
		public string zonename { get; set; }
		public Pmd.ZoneState state { get; set; }
	}
	/// <summary>
	/// 区服务器信息列表,选区列表
	/// </summary>
	public partial class ZoneInfoListLoginUserPmd_S
	{
		/// <summary>
		/// 游戏名称,(区别与区名)
		/// </summary>
		public string gamename { get; set; }
		/// <summary>
		/// 游戏编号
		/// </summary>
		public uint gameid { get; set; }
		private List<Pmd.ZoneInfo> m_zonelist;
		[DebuggerNonUserCode]
		public List<Pmd.ZoneInfo> zonelist
		{
			get { if (this.m_zonelist == null) m_zonelist = new List<Pmd.ZoneInfo>(); return m_zonelist; }
			set { m_zonelist = value; }
		}
	}
	/// <summary>
	/// 请求登陆某个区,发给LoginServer
	/// </summary>
	public partial class UserLoginRequestLoginUserPmd_C
	{
		/// <summary>
		/// 游戏编号
		/// </summary>
		public uint gameid { get; set; }
		/// <summary>
		/// 区编号
		/// </summary>
		public uint zoneid { get; set; }
		/// <summary>
		/// 客户端游戏版本号Version_Game
		/// </summary>
		public uint gameversion { get; set; }
		/// <summary>
		/// 机器码
		/// </summary>
		public string mid { get; set; }
	}
	/// <summary>
	/// 登陆某个区的错误返回,LoginServer返回
	/// </summary>
	public partial class UserLoginReturnFailLoginUserPmd_S
	{
		public Pmd.LoginReturnFailReason retcode { get; set; }
		/// <summary>
		/// 错误描述
		/// </summary>
		public string desc { get; set; }
	}
	/// <summary>
	/// 登陆某个区正确时的返回,LoginServer返回
	/// </summary>
	public partial class UserLoginReturnOkLoginUserPmd_S
	{
		/// <summary>
		/// 账号
		/// </summary>
		public ulong accountid { get; set; }
		/// <summary>
		/// 生成一个临时编号,用于校验,登陆网关时传上去
		/// </summary>
		public ulong logintempid { get; set; }
		/// <summary>
		/// 随机token
		/// </summary>
		public ulong tokenid { get; set; }
		/// <summary>
		/// 登陆的网关地址,接下来断开连接后马上登陆这个地址
		/// </summary>
		public string gatewayurl { get; set; }
		/// <summary>
		/// 游戏编号
		/// </summary>
		public uint gameid { get; set; }
		/// <summary>
		/// 区编号
		/// </summary>
		public uint zoneid { get; set; }
	}
	/// <summary>
	/// 发给网关的登陆消息
	/// </summary>
	public partial class UserLoginTokenLoginUserPmd_C
	{
		public uint gameid { get; set; }
		public uint zoneid { get; set; }
		public ulong accountid { get; set; }
		public ulong logintempid { get; set; }
		/// <summary>
		/// 客户端时间戳
		/// </summary>
		public uint timestamp { get; set; }
		/// <summary>
		/// md5(string(accountid) + string(logintempid) + string(timestamp) + string(tokenid))
		/// </summary>
		public string tokenmd5 { get; set; }
		/// <summary>
		/// 压缩算法
		/// </summary>
		public string compress { get; set; }
		/// <summary>
		/// 加密算法
		/// </summary>
		public string encrypt { get; set; }
		/// <summary>
		/// 加密key
		/// </summary>
		public string encryptkey { get; set; }
	}
	/// <summary>
	/// 通知客户端发送日志的地址和日志级别
	/// </summary>
	public partial class ClientLogUrlLoginUserPmd_S
	{
		/// <summary>
		/// 日志几遍,Debug,Info,Error
		/// </summary>
		public string loglevel { get; set; }
		/// <summary>
		/// 日志地址
		/// </summary>
		public string logurl { get; set; }
		/// <summary>
		/// 相同日志信息的日志只发一遍
		/// </summary>
		public bool distinct { get; set; }
	}
	public partial class MessageBoxLoginUserPmd_S
	{
		public string btnleft { get; set; }
		public string btnmiddle { get; set; }
		public string btnright { get; set; }
		public string info { get; set; }
	}
	/// <summary>
	/// 请求注册帐号
	/// </summary>
	public partial class RequestAccountRegisterLoginUserPmd_C
	{
		/// <summary>
		/// 账号
		/// </summary>
		public string account { get; set; }
		/// <summary>
		/// 密码
		/// </summary>
		public string password { get; set; }
		/// <summary>
		/// 验证码
		/// </summary>
		public string code { get; set; }
	}
	/// <summary>
	/// 请求注册帐号
	/// </summary>
	public partial class ReturnAccountRegisterLoginUserPmd_S
	{
		/// <summary>
		/// 账号
		/// </summary>
		public string account { get; set; }
		/// <summary>
		/// 账号ID
		/// </summary>
		public ulong accountid { get; set; }
	}
	/// <summary>
	/// 发给网关的主动退出消息
	/// </summary>
	public partial class UserLogoutTokenLoginUserPmd_C
	{
	}
	/// <summary>
	/// 发给网关的断线重连消息
	/// </summary>
	public partial class UserLoginReconnectLoginUserPmd_C
	{
		public ulong accountid { get; set; }
		/// <summary>
		/// 客户端时间戳
		/// </summary>
		public uint timestamp { get; set; }
		/// <summary>
		/// md5(string(accountid) + string(timestamp) + string(tokenkey))
		/// </summary>
		public string tokenmd5 { get; set; }
	}
	/// <summary>
	/// 如果是重连成功需要给老的客户度发送踢下线消息，否则会永远抢下去
	/// </summary>
	public partial class ReconnectKickoutLoginUserPmd_S
	{
		/// <summary>
		/// 描述
		/// </summary>
		public string desc { get; set; }
	}
	/// <summary>
	/// 平台用户信息
	/// </summary>
	public partial class PlatInfo
	{
		/// <summary>
		/// 用户账号。platid为PlatType_Normal时，account可以缺省为客户端机器码
		/// </summary>
		public string account { get; set; }
		/// <summary>
		/// 平台id
		/// </summary>
		public Pmd.PlatType platid { get; set; }
		public string email { get; set; }
		/// <summary>
		/// 性别
		/// </summary>
		public string gender { get; set; }
		/// <summary>
		/// 昵称
		/// </summary>
		public string nickname { get; set; }
		/// <summary>
		/// 时间戳
		/// </summary>
		public string timestamp { get; set; }
		/// <summary>
		/// 平台签名串
		/// </summary>
		public string sign { get; set; }
		/// <summary>
		/// 平台头像
		/// </summary>
		public string faceurl { get; set; }
		/// <summary>
		/// 增加一个扩展字段，特殊平台自行组装json
		/// </summary>
		public string extdata { get; set; }
	}
	/// <summary>
	/// 第三方平台登录
	/// </summary>
	public partial class ThirdPlatLoginUserPmd_C
	{
		private Pmd.PlatInfo m_platinfo;
		/// <summary>
		/// 平台用户信息
		/// </summary>
		[DebuggerNonUserCode]
		public Pmd.PlatInfo platinfo
		{
			get { if (this.m_platinfo == null) m_platinfo = new Pmd.PlatInfo(); return m_platinfo; }
			set { m_platinfo = value; }
		}
		/// <summary>
		/// 游戏编号
		/// </summary>
		public uint gameid { get; set; }
		/// <summary>
		/// 签名id
		/// </summary>
		public string sid { get; set; }
		/// <summary>
		/// 用户ID
		/// </summary>
		public string uid { get; set; }
	}
}
